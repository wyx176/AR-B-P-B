###############
#SSR默认配置描述#
###############
um1="none"     #加密方式
ux1="auth_chain_a"      #协议
uo1="plain"        #混淆
iflimitspeed='y'      #是否限速，默认为y
us='2048'      #限速值，默认2048K/s
iflimittime='n'      #是否限制帐号有效期,默认n
limit='1m'      #帐号有效期，默认一个月，需要上一项打开才能生效
unum=''    #账号允许连接数，留空为不限
TCP=on
UDP=on
############
#配置文件更改#
############
changeum(){
    echo ""
    echo "加密方式(默认3)"
    echo '1.none'
    echo '2.aes-128-cfb'
    echo '3.aes-256-cfb'
    echo '4.aes-128-ctr'
    echo '5.aes-256-ctr'
    echo '6.rc4-md5'
    echo '7.chacha20'
    echo '8.chacha20-ietf'
    echo '9.salsa20'
    while :; do echo
	    read -p "输入加密方式： " um
	    if [[ ! $um =~ ^[1-9]$ ]]; then
		    if [[ -z ${um} ]];then
			    um=3
			    break
		    else
			    echo "输入错误! 请输入正确的数字!"
		    fi
	    else
		    break	
	    fi
    done
if [[ $um == 1 ]];then
	um1="none"
fi
if [[ $um == 2 ]];then
	um1="aes-128-cfb"
fi
if [[ $um == 3 ]];then
	um1="aes-256-cfb"
fi
if [[ $um == 4 ]];then
	um1="aes-128-ctr"
fi
if [[ $um == 5 ]];then
	um1="aes-256-ctr"
fi
if [[ $um == 6 ]];then
	um1="rc4-md5"
fi
if [[ $um == 7 ]];then
	um1="chacha20"
fi
if [[ $um == 8 ]];then
	um1="chacha20-ietf"
fi
if [[ $um == 9 ]];then
	um1="salsa20"
fi
    sed -i "1,16s/^um1=.*/um1='${um1}'/" /usr/local/SSR-Bash-Python/easyadd.conf
}
changeux(){
    echo ""
    echo "协议方式(默认6)"
    echo '1.origin'
    echo '2.auth_sha1_v4'
    echo '3.auth_aes128_md5'
    echo '4.auth_aes128_sha1'
    echo '5.verify_deflate'
    echo '6.auth_chain_a'
    echo '7.auth_chain_b'
    echo '8.auth_chain_c'
    echo '9.auth_chain_d'
    echo '10.auth_chain_e'
    while :; do echo
	    read -p "输入协议方式： " ux
	    if [[ ! $ux =~ ^[1-9]$ ]]; then
		    if [[ $ux == 10 ]]; then
			    break
	    	elif [[ -z ${ux} ]];then
	    		ux=6
	    		break
	    	fi
	    	echo "输入错误! 请输入正确的数字!"
	    else
	    	break	
	    fi
    done
    if [[ $ux == 2 ]];then
	    while :; do echo
	    	read -p "是否兼容原版协议（y/n）： " ifprotocolcompatible
	    	if [[ ! $ifprotocolcompatible =~ ^[y,n]$ ]]; then
		    	echo "输入错误! 请输入y或者n!"
		    else
			    break
		    fi
	    done
    fi
if [[ $ux == 1 ]];then
	ux1="origin"
fi
if [[ $ux == 2 ]];then
	ux1="auth_sha1_v4"
fi
if [[ $ux == 3 ]];then
	ux1="auth_aes128_md5"
fi
if [[ $ux == 4 ]];then
	ux1="auth_aes128_sha1"
fi
if [[ $ux == 5 ]];then
	ux1="verify_deflate"
fi
if [[ $ux == 6 ]];then
	ux1="auth_chain_a"
fi
if [[ $ux == 7 ]];then
	ux1="auth_chain_b"
fi
if [[ $ux == 8 ]];then
	ux1="auth_chain_c"
fi
if [[ $ux == 9 ]];then
	ux1="auth_chain_d"
fi
if [[ $ux == 10 ]];then
	ux1="auth_chain_e"
fi
if [[ $ifprotocolcompatible == y ]]; then
	ux1=${ux1}"_compatible"
fi
    sed -i "1,16s/^ux1=.*/ux1='${ux1}'/" /usr/local/SSR-Bash-Python/easyadd.conf
}
changeuo(){
    echo ""
    echo "混淆方式(默认1)"
    echo '1.plain'
    echo '2.http_simple'
    echo '3.http_post'
    echo '4.tls1.2_ticket_auth'
    while :; do echo
	    read -p "输入混淆方式： " uo
	    if [[ ! $uo =~ ^[1-4]$ ]]; then
		    if [[ -z ${uo} ]];then
		    	uo=1
		    	break
		    else
		    	echo "输入错误! 请输入正确的数字!"
		    fi
	    else
	    	break	
	    fi
    done
    if [[ $uo != 1 ]];then
	    while :; do echo
	    	read -p "是否兼容原版混淆（y/n）： " ifobfscompatible
	    	if [[ ! $ifobfscompatible =~ ^[y,n]$ ]]; then
	    		echo "输入错误! 请输入y或者n!"
	    	else
	    		break
	    	fi
	    done
    fi
if [[ $uo == 1 ]];then
	uo1="plain"
fi
if [[ $uo == 2 ]];then
	uo1="http_simple"
fi
if [[ $uo == 3 ]];then
	uo1="http_post"
fi
if [[ $uo == 4 ]];then
	uo1="tls1.2_ticket_auth"
fi
if [[ $ifobfscompatible == y ]]; then
	uo1=${uo1}"_compatible"
fi
    sed -i "1,16s/^uo1=.*/uo1='${uo1}'/" /usr/local/SSR-Bash-Python/easyadd.conf
}
changespeed(){
    while :; do echo
	    read -p "是否开启端口限速（y/n）： " iflimitspeed
	    if [[ ! $iflimitspeed =~ ^[y,n]$ ]]; then
	    	echo "输入错误! 请输入y或者n!"
	    else
	    	break
	    fi
    done
    if [[ $iflimitspeed == y ]]; then
	    while :; do echo
	    	read -p "输入端口总限速(只需输入数字，单位：KB/s)： " us
	    	if [[ "$us" =~ ^(-?|\+?)[0-9]+(\.?[0-9]+)?$ ]];then
	       		break
	    	else
	       		echo 'Input Error!'
		    fi
	    done
    fi
    sed -i "1,16s/^iflimitspeed=.*/iflimitspeed='${iflimitspeed}'/" /usr/local/SSR-Bash-Python/easyadd.conf
    sed -i "1,16s/^us=.*/us='${us}'/" /usr/local/SSR-Bash-Python/easyadd.conf
}
changetime(){
    while :; do
	    read -p "是否需要限制帐号有效期(y/n): " iflimittime
	    if [[ ! ${iflimittime} =~ ^[y,n]$ ]]; then
		    echo "输入错误! 请输入y或者n!"
	    else
		    break
	    fi
    done
    if [[ ${iflimittime} == y ]]; then
	    read -p "请输入有效期(单位：月[m]日[d]小时[h],例如：1个月就输入1m){默认：一个月}: " limit
	    if [[ -z ${limit} ]];then
	    	limit="1m"
	    fi
    fi
    sed -i "1,16s/^iflimittime=.*/iflimittime='${iflimittime}'/" /usr/local/SSR-Bash-Python/easyadd.conf
    sed -i "1,16s/^limit=.*/limit='${limit}'/" /usr/local/SSR-Bash-Python/easyadd.conf
}
changeunum(){
    while :; do echo
	    	read -p "输入连接数限制（默认不限）： " unum
            if [[ -z ${unum} ]];then
                break
            fi
	    	if [[ "$unum" =~ ^(-?|\+?)[0-9]+(\.?[0-9]+)?$ ]];then
	       		break
	    	else
	       		echo 'Input Error!'
		    fi
	done
    sed -i "1,16s/^unum=.*/unum='${unum}'/" /usr/local/SSR-Bash-Python/easyadd.conf
}
showme(){
    source /usr/local/SSR-Bash-Python/easyadd.conf
    if [[ ${iflimitspeed} != y ]];then
        lspeed="不限速"
    else
        lspeed="${us}"
    fi
    if [[ ${iflimittime} == n ]];then
        ltime="不限时"
    else
        ltime="${limit}"
    fi
    if [[ -z ${unum} ]];then
        unum="不限"
    fi
    echo "当前配置信息："
    echo "加密方式：${um1}"
    echo "协议：${ux1}"
    echo "混淆：${uo1}"
    echo "限速（单位K/s）：${lspeed}"
    echo "限时：${ltime}"
    echo "账号连接数：${unum}"
}
changeme(){
    showme
    changeux
    changeuo
    changeum
    changespeed
    changeunum
    changetime
    echo "修改成功！"
    showme
}